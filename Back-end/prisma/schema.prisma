// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int    @id @default(autoincrement())
  firstName String @map("first_name")
  lastName  String @map("last_name")
  email     String @unique
  password  String
  tel       String
  role      Role   @default(USER)
  Pet       Pet[]

  @@map("user")
}

enum type {
  NORMAL
  EXOTIC
}
enum gender {
  MALE
  FEMALE
}
model Pet {
  id             Int              @id @default(autoincrement())
  name           String?
  chronicDisease String?          @map("chronic_disease")
  medicine       String?
  vaccined       String?
  age            String?
  breed          String?
  type           type?             @default(NORMAL)
  gender         gender?           @default(MALE)
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  VetAppointment VetAppointment[]

  @@map("pet")
}

model VetAppointment {
  id          Int        @id @default(autoincrement())
  date        DateTime
  pet         Pet        @relation(fields: [petId], references: [id])
  petId       Int
  vetClinic   VetClinic? @relation(fields: [vetClinicId], references: [id])
  vetClinicId Int?

  @@map("vet_appointment")
}

model VetClinic {
  id             Int              @id @default(autoincrement())
  doctor_name    String
  name           String           @map("name")
  email          String           @unique
  password       String
  location       String
  address        String
  phone          String
  picture        String?
  province       String
  type           String
  VetAppointment VetAppointment[]

  @@map("vet_clinic")
}
